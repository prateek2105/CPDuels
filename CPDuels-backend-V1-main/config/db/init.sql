-- Database initialization script
CREATE DATABASE IF NOT EXISTS cpduels;

-- Connect to the database
\c cpduels;

-- Drop tables if they exist (for clean initialization)
DROP TABLE IF EXISTS "DuelProblems";
DROP TABLE IF EXISTS "DuelPlayers";
DROP TABLE IF EXISTS "Problems";
DROP TABLE IF EXISTS "Duels";
DROP TABLE IF EXISTS "Players";
DROP TABLE IF EXISTS "CFProblems";

-- Create tables
CREATE TABLE IF NOT EXISTS "Players" (
  "id" SERIAL PRIMARY KEY,
  "handle" VARCHAR(255) NOT NULL DEFAULT 'Guest',
  "uid" VARCHAR(255) NOT NULL UNIQUE,
  "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "CFProblems" (
  "id" SERIAL PRIMARY KEY,
  "contestId" INTEGER NOT NULL,
  "index" VARCHAR(10) NOT NULL,
  "name" VARCHAR(255) NOT NULL,
  "type" VARCHAR(50) NOT NULL DEFAULT 'PROGRAMMING',
  "points" INTEGER,
  "rating" INTEGER,
  "tags" TEXT[] DEFAULT '{}',
  "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "Duels" (
  "id" SERIAL PRIMARY KEY,
  "ratingMin" INTEGER NOT NULL,
  "ratingMax" INTEGER NOT NULL,
  "problemCount" INTEGER NOT NULL DEFAULT 5,
  "timeLimit" INTEGER NOT NULL DEFAULT 30,
  "private" BOOLEAN NOT NULL DEFAULT FALSE,
  "status" VARCHAR(20) NOT NULL DEFAULT 'WAITING',
  "playerOneScore" INTEGER NOT NULL DEFAULT 0,
  "playerTwoScore" INTEGER NOT NULL DEFAULT 0,
  "playerOneSolves" INTEGER NOT NULL DEFAULT 0,
  "playerTwoSolves" INTEGER NOT NULL DEFAULT 0,
  "result" JSONB DEFAULT '["NONE"]',
  "startTime" DOUBLE PRECISION,
  "platform" VARCHAR(10) NOT NULL DEFAULT 'CF',
  "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "Problems" (
  "id" SERIAL PRIMARY KEY,
  "contestId" INTEGER NOT NULL,
  "index" VARCHAR(10) NOT NULL,
  "name" VARCHAR(255) NOT NULL,
  "type" VARCHAR(50) NOT NULL DEFAULT 'PROGRAMMING',
  "points" INTEGER NOT NULL DEFAULT 0,
  "tags" TEXT[] DEFAULT '{}',
  "playerOneAttempts" INTEGER NOT NULL DEFAULT 0,
  "playerTwoAttempts" INTEGER NOT NULL DEFAULT 0,
  "playerOneScore" INTEGER NOT NULL DEFAULT 0,
  "playerTwoScore" INTEGER NOT NULL DEFAULT 0,
  "databaseId" INTEGER REFERENCES "CFProblems"(id),
  "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "DuelPlayers" (
  "id" SERIAL PRIMARY KEY,
  "DuelId" INTEGER REFERENCES "Duels"(id) ON DELETE CASCADE,
  "PlayerId" INTEGER REFERENCES "Players"(id) ON DELETE CASCADE,
  "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE("DuelId", "PlayerId")
);

CREATE TABLE IF NOT EXISTS "DuelProblems" (
  "id" SERIAL PRIMARY KEY,
  "DuelId" INTEGER REFERENCES "Duels"(id) ON DELETE CASCADE,
  "ProblemId" INTEGER REFERENCES "Problems"(id) ON DELETE CASCADE,
  "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE("DuelId", "ProblemId")
);

-- Add indexes for performance
CREATE INDEX "idx_cfproblems_contestid_index" ON "CFProblems" ("contestId", "index");
CREATE INDEX "idx_problems_contestid_index" ON "Problems" ("contestId", "index");
CREATE INDEX "idx_duels_status" ON "Duels" ("status");
CREATE INDEX "idx_duels_private" ON "Duels" ("private");